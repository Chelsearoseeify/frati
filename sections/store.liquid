{{ 'component-store.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<script>
  const queryParams = new URLSearchParams({
    requestId: 'cd7f6740-2f2c-11ef-a586-356c126d6285',
  });

  window.sectionSettings = {{ section.settings | json }};

  console.log(window.sectionSettings)

 
  fetch('/apps/apiease/integration/caller/call?' + queryParams)
    .then((response) => response.json())
    .then((jsonResponse) => {
      displayLocations(jsonResponse);
      const locations = jsonResponse.data.data.locations.edges;

      // Map each location to a fetch promise for the image data
      let fetchPromises = locations.map((location) => {
        // Find the metafield with key 'image'
        const imageMetafield = location.node.metafields.edges.find((metafield) => metafield.node.key === 'image');
        if (imageMetafield) {
          const imageId = imageMetafield.node.value;
          const queryParamsEmbeddedVar = JSON.stringify({
            query: `{ node(id: "${imageId}") { ... on MediaImage { image { url}} }}`,
          });
          const queryParamsForImage = new URLSearchParams({
            requestId: '681be2a0-2fec-11ef-8b20-07a5d38eb884',
            queryParamsEmbedded: queryParamsEmbeddedVar,
          });
          fetch('/apps/apiease/integration/caller/call?' + queryParamsForImage)
            .then(function (response) {
              return response.json();
            })
            .then(function (jsonResponse) {
              const imageContainer = document.getElementById(`store__media-container--${imageId}`);

              const imageUrl = jsonResponse.data.data.node.image.url;

              var imgElement = document.createElement('img');
              // Set the src attribute to the image URL
              imgElement.src = imageUrl;
              imageContainer.appendChild(imgElement);
            });
        } else {
          // If no image metafield, return a resolved promise with null or an empty object
          return Promise.resolve(null);
        }
      });

      return Promise.all(fetchPromises);
    });

  function displayDayTime(day, time) {
    const sectionSettings = window.sectionSettings;
    console.log(sectionSettings[`${day}_label`])

    return ` <div
                    class="day-time-schedule"
                    style="
                      display: flex;
                      gap: 2rem;
                    "
                  >
                    <div class="day-time-schedule__day" style="min-width: 10rem;">
                      ${sectionSettings[`${day}_label`]}
                    </div>
                    <div class="day-time-schedule__time">
                      ${time}
                    </div>`;
  }

  function displayLocations(apiResponse) {
    const locationsContainer = document.getElementById('locations-container');
    const locations = apiResponse.data.data.locations.edges;

    locations.forEach((locationEdge) => {
      const location = locationEdge.node;
      const address = location.address;
      const metafields = location.metafields.edges;

      const locationDiv = document.createElement('div');
      const locationName = document.createElement('h2');
      const locationAddress = document.createElement('p');
      const locationPhone = document.createElement('p');
      const metafieldsList = document.createElement('div');

      locationName.textContent = location.name;
      locationAddress.textContent = `${address.address1}, ${address.city}, ${address.country} (${address.zip})`;
      locationPhone.textContent = `Phone: ${address.phone}`;

      let imageId = '';
      let locationDescription = '';
     
      metafields.forEach((metafieldEdge) => {
        const metafield = metafieldEdge.node;
        if (metafield.key === 'image') {
          imageId = metafield.value;
        } else if (metafield.key === 'description') {
          locationDescription = metafield.value;
        } else {
          const metafieldItem = document.createElement('div');
          metafieldItem.style.display = 'flex';
          metafieldItem.style.marginBottom = '-2px';
          metafieldItem.innerHTML = displayDayTime(metafield.key, metafield.value);
          metafieldsList.appendChild(metafieldItem);
        }
      });
      console.log(address);
      const longitude = '9.162771150000001';
      const latitude = '45.5076664';

      const sectionSettings = window.sectionSettings;

      locationDiv.innerHTML = `
      <div id='${location.name.replaceAll(
        ' ',
        '_'
      )}' class="store__grid grid grid--gapless grid--1-col grid--2-col-tablet location-container">
        <div class="store__media-item store__media-item--medium store__media-item--top grid__item">
          <div id="store__media-container--${imageId}" class="store__media store__media--adapt global-media-settings background-transparent store__media--placeholder placeholder animate--">
          </div>
        </div>
        <div class="store__text-item grid__item">
          <div class="store__content store__content--top store__content--desktop-left store__content--mobile-left store__content--adapt content-container background-transparent">
            <h3 class="store__heading inline-richtext h3">${location.name}</h2>
            <h4 class="h4" style="margin: 2rem 0">${locationDescription}</h4>
            <div style="display: flex; gap: 2rem; margin-bottom: 1rem;">
              <div style="min-width: 10rem;">${sectionSettings.address_label}</div>
              <div class="">${address.address1}, ${address.city}, ${address.country} (${address.zip})</div>
            </div> 
            <div style="display: flex; gap: 2rem; margin-bottom: 1rem;">
              <div style="min-width: 10rem;">Telefono</div>
              <div class="">${address.phone}</div>   
            </div>  
            ${metafieldsList.innerHTML}   
          <div style="display: flex; gap: 2rem; margin-top: 2rem">
            <h4 class="h4" style="margin-top: 0">Indicazioni</h4>
            <iframe src="https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d11184.479309743765!2d${
              address.longitude
            }!3d${
        address.latitude
      }!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sit!2sit!4v1719052180205!5m2!1sit!2sit" width="410" height="300" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
          </div>  
          </div>
       
        </div>
      `;

      locationsContainer.appendChild(locationDiv);
    });
  }
</script>

{%- liquid
  assign fetch_priority = 'auto'
  if section.index == 1
    assign fetch_priority = 'high'
  endif
  if section.settings.color_scheme == section.settings.color_scheme and section.settings.content_layout == 'no-overlap'
    assign remove_color_classes = true
  endif
-%}

<div class="section-{{ section.id }}-padding gradient color-{{ section.settings.color_scheme }}">
  <div id="locations-container" class="page-width">
    {% comment %}
      <div class="store store--{{ section.settings.content_layout }} isolate{% if settings.text_boxes_border_thickness > 0 and settings.text_boxes_border_opacity > 0 and settings.media_border_thickness > 0 and settings.media_border_opacity > 0 %} collapse-borders{% endif %}{% unless section.settings.color_scheme == section.settings.color_scheme and settings.media_border_thickness > 0 and settings.text_boxes_shadow_opacity == 0 and settings.text_boxes_border_thickness == 0 or settings.text_boxes_border_opacity == 0 %} collapse-corners{% endunless %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
        <div class="store__grid grid grid--gapless grid--1-col grid--{% if section.settings.desktop_image_width == 'medium' %}2-col-tablet{% else %}3-col-tablet{% endif %}{% if section.settings.layout == 'text_first' %} store__grid--reverse{% endif %}">
          <div class="store__media-item store__media-item--{{ section.settings.desktop_image_width }} store__media-item--{{ section.settings.desktop_content_position }} grid__item">
            <div
              class="store__media store__media--{{ section.settings.height }} global-media-settings{% unless remove_color_classes %} gradient color-{{ section.settings.color_scheme }}{% else %} background-transparent{% endunless %}{% if section.settings.image != blank %} media{% else %} store__media--placeholder placeholder{% endif %}{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}"
              {% if section.settings.height == 'adapt' and section.settings.image != blank %}
                style="padding-bottom: {{ 1 | divided_by: section.settings.image.aspect_ratio | times: 100 }}%;"
              {% endif %}
            >
              {%- if section.settings.image != blank -%}
                {{ section.settings.image | image_url: width: 1500 | image_tag: fetchpriority: fetch_priority }}
              {%- else -%}
                {{ 'detailed-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
              {%- endif -%}
            </div>
          </div>
          <div class="store__text-item grid__item">
            <div
              id="Store--{{ section.id }}"
              class="store__content store__content--{{ section.settings.desktop_content_position }} store__content--desktop-left store__content--mobile-left store__content--{{ section.settings.height }} content-container{% unless remove_color_classes %} gradient color-{{ section.settings.color_scheme }}{% else %} background-transparent{% endunless %}"
            >
              {%- for block in section.blocks -%}
                {% case block.type %}
                  {%- when 'heading' -%}
                    <h2
                      class="store__heading inline-richtext {{ block.settings.heading_size }}"
                      {{ block.shopify_attributes }}
                    >
                      {{ block.settings.heading }}
                    </h2>
                  {%- when 'store-type' -%}
                    <p
                      class="store__text store__text--subtitle h3"
                      {{ block.shopify_attributes }}
                    >
                      {{ block.settings.store_type | escape }}
                    </p>
                  {%- when 'address' -%}
                    <div
                      style="
                        display: flex;
                        gap: 2rem;
                        margin-bottom: 1rem;
                      "
                    >
                      <div style="min-width: 10rem;">Indirizzo</div>
                      <div
                        class=""
                        {% comment %} {{ block.shopify_attributes }} {% endcomment %}
                      >
                        {{ block.settings.store_address | escape }}
                      </div>
                    </div>
                  {%- when 'phone' -%}
                    <div
                      style="
                        display: flex;
                        gap: 2rem;
                        margin-bottom: 1rem;
                      "
                    >
                      <div style="min-width: 10rem;">Phone</div>
                      <div
                        class=""
                        {% comment %} {{ block.shopify_attributes }} {% endcomment %}
                      >
                        {{ block.settings.store_phone | escape }}
                      </div>
                    </div>
                  {%- when 'caption' -%}
                    <h3
                      class="store__text store__text--caption {{ block.settings.text_style }} {{ block.settings.text_style }}--{{ block.settings.text_size }} {{ block.settings.text_style }}"
                      {{ block.shopify_attributes }}
                    >
                      {{ block.settings.caption | escape }}
                    </h3>
                  {%- when 'text' -%}
                    <div class="store__text rte {{ block.settings.text_style }}" {{ block.shopify_attributes }}>
                      {{ block.settings.text }}
                    </div>
                  {%- when 'day_time-schedule' -%}
                    <div
                      class="day-time-schedule"
                      style="
                        display: flex;
                        gap: 2rem;
                      "
                    >
                      <div class="day-time-schedule__day" style="min-width: 10rem;">
                        {{ block.settings.day }}
                      </div>
                      <div class="day-time-schedule__time">
                        {{ block.settings.time }}
                      </div>
                    </div>

                  {%- when 'button' -%}
                    {%- if block.settings.button_label != blank -%}
                      <a
                        {% if block.settings.button_link == blank %}
                          role="link" aria-disabled="true"
                        {% else %}
                          href="{{ block.settings.button_link }}"
                        {% endif %}
                        class="button{% if block.settings.button_style_secondary %} button--secondary{% else %} button--primary{% endif %}"
                        {{ block.shopify_attributes }}
                      >
                        {{ block.settings.button_label | escape }}
                      </a>
                    {%- endif -%}
                {%- endcase -%}
              {%- endfor -%}
            </div>
          </div>
        </div>
      </div>
    {% endcomment %}
  </div>
</div>

{% schema %}
{
  "name": "Store",
  "tag": "section",
  "class": "store",

  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.image-with-text.settings.image.label"
    },
    {
      "type": "text",
      "id": "address_label",
      "label": "Address Label",
      "default": "Indirizzo"
    },
    {
      "type": "text",
      "id": "phone_label",
      "label": "Phone Label",
      "default": "Telefono"
    },
    {
      "type": "text",
      "id": "monday_label",
      "label": "Monday Label",
      "default": "Monday"
    },
    {
      "type": "text",
      "id": "tuesday_label",
      "label": "Tuesday Label",
      "default": "Tuesday"
    },
    {
      "type": "text",
      "id": "wednesday_label",
      "label": "Wednesday Label",
      "default": "Wednesday"
    },
    {
      "type": "text",
      "id": "thursday_label",
      "label": "Thursday Label",
      "default": "Thursday"
    },
    {
      "type": "text",
      "id": "friday_label",
      "label": "Friday Label",
      "default": "Friday"
    },
    {
      "type": "text",
      "id": "saturday_label",
      "label": "Saturday Label",
      "default": "Saturday"
    },
    {
      "type": "text",
      "id": "sunday_label",
      "label": "Sunday Label",
      "default": "Sunday"
    },
    {
      "type": "select",
      "id": "layout",
      "options": [
        {
          "value": "image_first",
          "label": "t:sections.image-with-text.settings.layout.options__1.label"
        },
        {
          "value": "text_first",
          "label": "t:sections.image-with-text.settings.layout.options__2.label"
        }
      ],
      "default": "image_first",
      "label": "t:sections.image-with-text.settings.layout.label",
      "info": "t:sections.image-with-text.settings.layout.info"
    },
    {
      "type": "select",
      "id": "desktop_content_position",
      "options": [
        {
          "value": "top",
          "label": "t:sections.image-with-text.settings.desktop_content_position.options__1.label"
        },
        {
          "value": "middle",
          "label": "t:sections.image-with-text.settings.desktop_content_position.options__2.label"
        },
        {
          "value": "bottom",
          "label": "t:sections.image-with-text.settings.desktop_content_position.options__3.label"
        }
      ],
      "default": "top",
      "label": "t:sections.image-with-text.settings.desktop_content_position.label"
    },

    {
      "type": "select",
      "id": "content_layout",
      "options": [
        {
          "value": "no-overlap",
          "label": "t:sections.image-with-text.settings.content_layout.options__1.label"
        },
        {
          "value": "overlap",
          "label": "t:sections.image-with-text.settings.content_layout.options__2.label"
        }
      ],
      "default": "no-overlap",
      "label": "t:sections.image-with-text.settings.content_layout.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.multirow.settings.container_color_scheme.label",
      "default": "scheme-1"
    },

    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.image-with-text.blocks.heading.name",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "Store name",
          "label": "t:sections.image-with-text.blocks.heading.settings.heading.label"
        },
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "h2",
              "label": "t:sections.all.heading_size.options__1.label"
            },
            {
              "value": "h1",
              "label": "t:sections.all.heading_size.options__2.label"
            },
            {
              "value": "h0",
              "label": "t:sections.all.heading_size.options__3.label"
            }
          ],
          "default": "h1",
          "label": "t:sections.all.heading_size.label"
        }
      ]
    },
    {
      "type": "store-type",
      "name": "Store type",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "store_type",
          "default": "Panificio, pasticceria, caffetteria, pranzi",
          "label": "Store type"
        }
      ]
    },
    {
      "type": "address",
      "name": "address",
      "settings": [
        {
          "type": "text",
          "id": "store_address",
          "default": "Strada Langhirano 379 (43124 - PR)",
          "label": "Address"
        }
      ]
    },
    {
      "type": "phone",
      "name": "phone",
      "settings": [
        {
          "type": "text",
          "id": "store_phone",
          "default": "+39 0521 1830387",
          "label": "Phone"
        }
      ]
    },

    {
      "type": "caption",
      "name": "t:sections.image-with-text.blocks.caption.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "caption",
          "default": "Add a tagline",
          "label": "t:sections.image-with-text.blocks.caption.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "subtitle",
              "label": "t:sections.image-with-text.blocks.caption.settings.text_style.options__1.label"
            },
            {
              "value": "caption-with-letter-spacing",
              "label": "t:sections.image-with-text.blocks.caption.settings.text_style.options__2.label"
            }
          ],
          "default": "caption-with-letter-spacing",
          "label": "t:sections.image-with-text.blocks.caption.settings.text_style.label"
        },
        {
          "type": "select",
          "id": "text_size",
          "options": [
            {
              "value": "small",
              "label": "t:sections.image-with-text.blocks.caption.settings.caption_size.options__1.label"
            },
            {
              "value": "medium",
              "label": "t:sections.image-with-text.blocks.caption.settings.caption_size.options__2.label"
            },
            {
              "value": "large",
              "label": "t:sections.image-with-text.blocks.caption.settings.caption_size.options__3.label"
            }
          ],
          "default": "medium",
          "label": "t:sections.image-with-text.blocks.caption.settings.caption_size.label"
        }
      ]
    },
    {
      "type": "text",
      "name": "t:sections.image-with-text.blocks.text.name",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Pair text with an image to focus on your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>",
          "label": "t:sections.image-with-text.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.image-with-text.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.image-with-text.blocks.text.settings.text_style.options__2.label"
            }
          ],
          "default": "body",
          "label": "t:sections.image-with-text.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "day_time-schedule",
      "name": "Time Schedule",
      "limit": 7,
      "settings": [
        {
          "type": "select",
          "id": "day",
          "options": [
            {
              "value": "Monday",
              "label": "Monday"
            },
            {
              "value": "Tuesday",
              "label": "Tuesday"
            },
            {
              "value": "Wednesday",
              "label": "Wednesday"
            },
            {
              "value": "Thursday",
              "label": "Thursday"
            },
            {
              "value": "Friday",
              "label": "Friday"
            },
            {
              "value": "Saturday",
              "label": "Saturday"
            },
            {
              "value": "Sunday",
              "label": "Sunday"
            }
          ],
          "default": "Monday",
          "label": "day"
        },
        {
          "type": "text",
          "id": "time",
          "default": "8:00 - 18:00",
          "label": "time"
        }
      ]
    },
    {
      "type": "button",
      "name": "t:sections.image-with-text.blocks.button.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "button_label",
          "default": "Button label",
          "label": "t:sections.image-with-text.blocks.button.settings.button_label.label",
          "info": "t:sections.image-with-text.blocks.button.settings.button_label.info"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.image-with-text.blocks.button.settings.button_link.label"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary",
          "default": false,
          "label": "t:sections.image-with-text.blocks.button.settings.outline_button.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.image-with-text.presets.name",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "text"
        },
        {
          "type": "button"
        }
      ]
    }
  ],
  "locales": {
    "en": {
      "title": "Store"
    },
    "it": {
      "title": "Negozio"
    }
  }
}
{% endschema %}
